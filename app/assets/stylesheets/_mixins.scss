/* ------------------------
 Mixins
------------------------ */


@mixin transition-all {
  @include transition(all,.2s,ease-in-out);
}

@mixin transition-one($el) {
  @include transition($el,.2s,ease-in-out);
}

// format $multi written out as:
// width .2s ease-in-out, height .2s ease-in-out, background .2s ease-in-out

$trans: .2s ease-in-out;


// -webkit-tap-highlight-color


@mixin transition-multi($multi...) {
  -webkit-transition: $multi;
   -moz-transition: $multi;
    -ms-transition: $multi;
     -o-transition: $multi;
      transition: $multi;
}


@mixin transition-delay($time) {
  -webkit-transition-delay: $time;
   transition-delay: $time;
}


@mixin antialias {
  -webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}


@mixin gradienttext {
  background: none;        // for old browsers
  color: red;              // for old browsers
  background: -webkit-linear-gradient(left, red 0, deeppink 100%);
  background: -o-linear-gradient(left, red 0, deeppink 100%);
  background: -moz-linear-gradient(left, red 0, deeppink 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}


@mixin row-eq-height {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display:         flex;
}

@mixin flex {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display:         flex;
}



@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin clear {
  content: '';
  display: block;
  clear: both;
}


// set in pixels or ems
@mixin blur($amount) {
  -webkit-filter: blur($amount);
   -moz-filter: blur($amount);
    -o-filter: blur($amount);
     -ms-filter: blur($amount);
      filter: blur($amount);
}


@mixin blur($amt) {
  -webkit-filter: blur($amt);
   filter: blur($amt);
}


@mixin box-shadow ($type, $vert, $horiz, $blur, $color) {
  -webkit-box-shadow: $type $vert $horiz $blur $color;
   box-shadow: $type $vert $horiz $blur $color;
}


@mixin simple-box-shadow ($vert, $horiz, $blur, $color) {
  -webkit-box-shadow: $vert $horiz $blur $color;
   box-shadow: $vert $horiz $blur $color;
}


@mixin box-shadow-none {
  -webkit-box-shadow: 0 0 0 transparent;
   box-shadow: 0 0 0 transparent;
}


@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}


@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') { @content; }
  @include optional-at-root(':-moz-placeholder') { @content; }
  @include optional-at-root('::-moz-placeholder') { @content; }
  @include optional-at-root(':-ms-input-placeholder') { @content; }
}


@mixin transitiondelay ($time) {
  transition-delay: $time;
   -webkit-transition-delay: $time;
}


@mixin transition($transition-property, $transition-time, $method) {
	-webkit-transition: $transition-property $transition-time $method;
	 -moz-transition: $transition-property $transition-time $method;
	  -ms-transition: $transition-property $transition-time $method;
	   -o-transition: $transition-property $transition-time $method;
	    transition: $transition-property $transition-time $method;
}


@mixin border-radius ($rad) {
  border-radius: ($rad);
}


@mixin border-radius-corners ($nw, $ne, $se, $sw) {
  border-radius: ($nw $ne $se $sw);
}


@mixin translate($horiz,$vert) {
	-webkit-transform: translate($horiz,$vert);
	 -moz-transform: translate($horiz,$vert);
	  -ms-transform: translate($horiz,$vert);
	   -o-transform: translate($horiz,$vert);
	   transform: translate($horiz,$vert);
}


@mixin opacity($opac) {
	opacity: $opac;
   filter: alpha(opacity= $opac * 100 ); /* For IE8 and earlier */
}


@mixin translatey($y) {
	-webkit-transform: translateY($y);
	 -ms-transform: translateY($y);
	  transform: translateY($y);
}


// $rotate and $skew with deg, a la "90deg"
@mixin transform($rotate, $scale, $skew, $translatex, $translatey) {
  transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
   -webkit-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
    -moz-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
     -o-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
      -ms-transform: rotate($rotate) scale($scale) skew($skew) translateX($translatex) translateY($translatey);
}

@mixin scale($scale) {
  transform: scale($scale);
   -webkit-transform: scale($scale);
    -moz-transform: scale($scale);
     -o-transform: scale($scale);
      -ms-transform: scale($scale);
}

@mixin scalexy($scalex, $scaley) {
  transform: scale($scalex, $scaley);
   -webkit-transform: scale($scalex, $scaley);
    -moz-transform: scale($scalex, $scaley);
     -o-transform: scale($scalex, $scaley);
      -ms-transform: scale($scalex, $scaley);
}

@mixin rotate($deg) {
  transform: rotate($deg);
   -webkit-transform: rotate($deg);
    -moz-transform: rotate($deg);
     -o-transform: rotate($deg);
      -ms-transform: rotate($deg);
}

@mixin transform-origin($hoiz, $vert) {
  -ms-transform-origin: $hoiz $vert; /* IE 9 */
   -webkit-transform-origin: $hoiz $vert; /* Chrome, Safari, Opera */
    transform-origin: $hoiz $vert;
}


@mixin link {
  &:link{ @content; }
   &:visited{ @content; }
	  &:active{ @content; }
	   &:focus{ @content; }
	    &:target{ @content; }
}

@mixin hover {
  &:hover{ @content; }
	 &:active{ @content; }
	  &:focus{ @content; }
	   &:target{ @content; }
}


@mixin lineargradient($colora, $colorb) {
  background-image: -webkit-gradient(
   linear,
   right top,
   left top,
   color-stop(0,$colora),
   color-stop(1,$colorb)
  );
  background-image: -o-linear-gradient(top, $colora 0, $colorb 100%);
  background-image: -moz-linear-gradient(top, $colora 0, $colorb 100%);
  background-image: -webkit-linear-gradient(top, $colora 0, $colorb 100%);
  background-image: -ms-linear-gradient(top, $colora 0, $colorb 100%);
  background-image: linear-gradient(top, $colora 0, $colorb 100%);
}



// Animations are a three part thing
// this is Part One, leave it alone :)

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} { @content; }
  @-moz-keyframes #{$animationName} { @content; }
  @-o-keyframes #{$animationName} { @content; }
  @keyframes #{$animationName} { @content; }
}




// Part Two: name and define the animation

/*  @include keyframes(NAME) {
    50% { transform: scale(1.2); transform-origin: center center; }
    0%, 100% { transform: scale(1); transform-origin: center center; }
}  */


@include keyframes(spin) {
    0% { @include rotate(0deg); }
    100% { @include rotate(180deg); }
}



// Part Three: apply it in SCSS file a la

/*  #animated-div {

-webkit-animation-name: NAME;
-webkit-animation-timing-function: linear;
-webkit-animation-iteration-count: 1;
-webkit-animation-duration: 4s;

animation-name: NAME;
animation-timing-function: linear;
animation-iteration-count: 1;
animation-duration: 4s;

}  */
